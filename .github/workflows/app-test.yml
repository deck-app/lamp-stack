name: LAMP Stack

on:
  schedule:
  - cron:  '00 19 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Apache-PHP82-Mariadb:
    strategy:
      matrix:
        os: [ubuntu-latest, self-hosted]
    runs-on: ${{ matrix.os }}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - name: Slack Notification
      uses: act10ns/slack@v1
      with: 
        status: starting
        channel: '#github_action_status'
        SLACK_COLOR: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        message: Waiting for LAMP 8.2 Build and Testing...
      if: always()
    - uses: actions/checkout@v2
    - name: Build the Docker image Apache php 8.2
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
          PHP_VERSION: "8.2"
          XDEBUG: true
          DISPLAY_PHPERROR: true
          SERVER_ROOT:  /var/www/
          APP_CODE_PATH_HOST: /tmp/app
          DB_NAME: test
          DB_USER:  admin
          DB_PASSWORD:  password
          DB_ROOT_PASSWORD: password
          DATA_PATH_HOST: /tmp/lamp
          MARIADB_VERSION:  latest
    - name: PHP version check
      run : docker exec lamp-stack_apache_1 php -v
    - name: Mongodb driver check
      run:  docker exec lamp-stack_apache_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec lamp-stack_apache_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec lamp-stack_apache_1 composer
    - name: Web site Test
      run: |
        docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
        sudo curl -I --http2 http://localhost:5590/
    - name: Laravel8 test
      run:  docker exec lamp-stack_apache_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Check MariaDB version
      run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
    - name: Verify MariaDB database from user
      run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
    - name: Create a Database
      run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
    - name: Verify Database create or not
      run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
    - name: Database connection check
      run: |
        docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
        docker exec lamp-stack_apache_1 sudo php /var/www/db.php
    - name: Destroy Container and file
      run:  |
        docker-compose down
        sudo rm -rf /tmp/app
        sudo rm -rf /tmp/lamp
        echo "y" | docker image prune -a
        echo "y" | docker volume prune
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: github_action_status
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: rtCamp
        # SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      # with: 
      #   status: ${{ job.status }}
      #   fields: repo,message,commit,author,action,eventName,ref,workflow
      #   channel: '#github_action_status'
      if: always()
  # Apache-PHP82-Mariadb-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Check folder
  #     run:  |
  #       while -d /tmp/app; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/app/
  #       done
  #       while -d /tmp/lamp; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/lamp
  #       done
  #   - name : Folder check list
  #     run:  |
  #       while [ -d /tmp/app ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/app/
  #       done
  #       while [ -d /tmp/db ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/lamp
  #       done
  #   - name: Build the Docker image Apache php 8.2
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "8.2"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/lamp
  #         MARIADB_VERSION:  latest
  #   - name: PHP version check
  #     run : docker exec lamp-stack_apache_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lamp-stack_apache_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lamp-stack_apache_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       curl -i http://localhost:5590/
  #   - name: Laravel8 test
  #     run:  docker exec lamp-stack_apache_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Verify Database create or not
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  #   - name: Destroy Container 
  #     run: |
  #       docker-compose down
  #       echo "y" | docker system prune -a
  #       while -d /tmp/app; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/app/
  #       done
  #       while -d /tmp/lamp; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/lamp
  #       done


  # Apache-PHP81-Mariadb:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, self-hosted]
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #   steps:
  #   - name: Slack Notification
  #     uses: act10ns/slack@v1
  #     with: 
  #       status: starting
  #       channel: '#github_action_status'
  #       SLACK_COLOR: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
  #       message: Waiting for LAMP 8.1 Build and Testing...
  #     if: always()
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image Apache php 8.1
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "8.1"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/lamp
  #         MARIADB_VERSION:  latest
  #   - name: PHP version check
  #     run : docker exec lamp-stack_apache_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lamp-stack_apache_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lamp-stack_apache_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       sudo curl -I --http2 http://localhost:5590/
  #   - name: Laravel8 test
  #     run:  docker exec lamp-stack_apache_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  #   - name: Destroy Container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/app
  #       sudo rm -rf /tmp/lamp
  #       echo "y" | docker image prune -a
  #       echo "y" | docker volume prune
  #   - name: Slack Notification
  #     uses: 8398a7/action-slack@v3
  #     with: 
  #       status: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow
  #       channel: '#github_action_status'
  #     if: always()
  # # Apache-PHP81-Mariadb-ARM64:
  # #   runs-on: self-hosted
  # #   steps:
  # #   - uses: actions/checkout@v2
  # #   - name: Check folder
  # #     run:  |
  # #       while -d /tmp/app; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while -d /tmp/lamp; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  # #   - name : Folder check list
  # #     run:  |
  # #       while [ -d /tmp/app ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while [ -d /tmp/db ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  # #   - name: Build the Docker image Apache php 8.1
  # #     run: docker-compose -f "docker-compose.yml" up -d --build
  # #     env:
  # #         PHP_VERSION: "8.1"
  # #         XDEBUG: true
  # #         DISPLAY_PHPERROR: true
  # #         SERVER_ROOT:  /var/www/
  # #         APP_CODE_PATH_HOST: /tmp/app
  # #         DB_NAME: test
  # #         DB_USER:  admin
  # #         DB_PASSWORD:  password
  # #         DB_ROOT_PASSWORD: password
  # #         DATA_PATH_HOST: /tmp/lamp
  # #         MARIADB_VERSION:  latest
  # #   - name: PHP version check
  # #     run : docker exec lamp-stack_apache_1 php -v
  # #   - name: Mongodb driver check
  # #     run:  docker exec lamp-stack_apache_1 php -m | grep mongo
  # #   - name: Mysql Driver check
  # #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  # #   - name: Composer test
  # #     run: docker exec lamp-stack_apache_1 composer
  # #   - name: Web site Test
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  # #       curl -i http://localhost:5590/
  # #   - name: Laravel8 test
  # #     run:  docker exec lamp-stack_apache_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  # #   - name: Verify MariaDB running from host, create Database and show Database
  # #     run: |
  # #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  # #           echo "Waiting for database connection..."
  # #           sleep 2
  # #       done
  # #   - name: Check MariaDB version
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  # #   - name: Verify MariaDB database from user
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  # #   - name: Verify Database create or not
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  # #   - name: Database connection check
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  # #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  # #   - name: Destroy Container 
  # #     run: |
  # #       docker-compose down
  # #       echo "y" | docker system prune -a
  # #       while -d /tmp/app; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while -d /tmp/lamp; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done

  # Apache-PHP8-Mariadb:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, self-hosted]
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #   steps:
  #   - name: Slack Notification
  #     uses: act10ns/slack@v1
  #     with: 
  #       status: starting
  #       channel: '#github_action_status'
  #       SLACK_COLOR: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
  #       message: Waiting for LAMP 8.0 Build and Testing...
  #     if: always()
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image Apache php 8.0
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "8.0"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/lamp
  #         MARIADB_VERSION:  latest
  #   - name: PHP version check
  #     run : docker exec lamp-stack_apache_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lamp-stack_apache_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lamp-stack_apache_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       sudo curl -I --http2 http://localhost:5590/
  #   - name: Laravel8 test
  #     run:  docker exec lamp-stack_apache_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  #   - name: Destroy Container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/app
  #       sudo rm -rf /tmp/lamp
  #       echo "y" | docker image prune -a
  #       echo "y" | docker volume prune
  #   - name: Slack Notification
  #     uses: 8398a7/action-slack@v3
  #     with: 
  #       status: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow
  #       channel: '#github_action_status'
  #     if: always()
  # # Apache-PHP8-Mariadb-ARM64:
  # #   runs-on: self-hosted
  # #   steps:
  # #   - uses: actions/checkout@v2
  # #   - name: Check folder
  # #     run:  |
  # #       while -d /tmp/app; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while -d /tmp/lamp; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  # #   - name : Folder check list
  # #     run:  |
  # #       while [ -d /tmp/app ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while [ -d /tmp/db ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  # #   - name: Build the Docker image Apache php 8.0
  # #     run: docker-compose -f "docker-compose.yml" up -d --build
  # #     env:
  # #         PHP_VERSION: "8.0"
  # #         XDEBUG: true
  # #         DISPLAY_PHPERROR: true
  # #         SERVER_ROOT:  /var/www/
  # #         APP_CODE_PATH_HOST: /tmp/app
  # #         DB_NAME: test
  # #         DB_USER:  admin
  # #         DB_PASSWORD:  password
  # #         DB_ROOT_PASSWORD: password
  # #         DATA_PATH_HOST: /tmp/lamp
  # #         MARIADB_VERSION:  latest
  # #   - name: PHP version check
  # #     run : docker exec lamp-stack_apache_1 php -v
  # #   - name: Mongodb driver check
  # #     run:  docker exec lamp-stack_apache_1 php -m | grep mongo
  # #   - name: Mysql Driver check
  # #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  # #   - name: Composer test
  # #     run: docker exec lamp-stack_apache_1 composer
  # #   - name: Web site Test
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  # #       curl -i http://localhost:5590/
  # #   - name: Laravel8 test
  # #     run:  docker exec lamp-stack_apache_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  # #   - name: Verify MariaDB running from host, create Database and show Database
  # #     run: |
  # #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  # #           echo "Waiting for database connection..."
  # #           sleep 2
  # #       done
  # #   - name: Check MariaDB version
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  # #   - name: Verify MariaDB database from user
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  # #   - name: Verify Database create or not
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  # #   - name: Database connection check
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  # #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  # #   - name: Destroy Container 
  # #     run: |
  # #       docker-compose down
  # #       echo "y" | docker system prune -a
  # #       while -d /tmp/app; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while -d /tmp/lamp; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
        
        

  # Apache-PHP7-Mariadb:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, self-hosted]
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #   steps:
  #   - name: Slack Notification
  #     uses: act10ns/slack@v1
  #     with: 
  #       status: starting
  #       channel: '#github_action_status'
  #       SLACK_COLOR: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
  #       message: Waiting for LAMP 7.4 Build and Testing...
  #     if: always()
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image Apache php 7.4
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "7.4"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/lamp
  #         MARIADB_VERSION:  latest
  #   - name: PHP version check
  #     run : docker exec lamp-stack_apache_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lamp-stack_apache_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lamp-stack_apache_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       sudo curl -I --http2 http://localhost:5590/
  #   - name: Laravel8 test
  #     run:  docker exec lamp-stack_apache_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  #   - name: Destroy Container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker volume prune
  #       sudo rm -rf /tmp/app
  #       sudo rm -rf /tmp/lamp
  #   - name: Slack Notification
  #     uses: 8398a7/action-slack@v3
  #     with: 
  #       status: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow
  #       channel: '#github_action_status'
  #     if: always()
  # # Apache-PHP7-Mariadb-ARM64:
  # #   runs-on: self-hosted
  # #   steps:
  # #   - uses: actions/checkout@v2
  # #   - name: Check folder
  # #     run:  |
  # #       while -d /tmp/app; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while -d /tmp/lamp; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  # #   - name : Folder check list
  # #     run:  |
  # #       while [ -d /tmp/app ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while [ -d /tmp/db ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  # #   - name: Build the Docker image Apache php 7.4
  # #     run: docker-compose -f "docker-compose.yml" up -d --build
  # #     env:
  # #         PHP_VERSION: "7.4"
  # #         XDEBUG: true
  # #         DISPLAY_PHPERROR: true
  # #         SERVER_ROOT:  /var/www/
  # #         APP_CODE_PATH_HOST: /tmp/app
  # #         DB_NAME: test
  # #         DB_USER:  admin
  # #         DB_PASSWORD:  password
  # #         DB_ROOT_PASSWORD: password
  # #         DATA_PATH_HOST: /tmp/lamp
  # #         MARIADB_VERSION:  latest
  # #   - name: PHP version check
  # #     run : docker exec lamp-stack_apache_1 php -v
  # #   - name: Mongodb driver check
  # #     run:  docker exec lamp-stack_apache_1 php -m | grep mongo
  # #   - name: Mysql Driver check
  # #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  # #   - name: Composer test
  # #     run: docker exec lamp-stack_apache_1 composer
  # #   - name: Web site Test
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  # #       curl -i http://localhost:5590/
  # #   - name: Laravel8 test
  # #     run:  docker exec lamp-stack_apache_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  # #   - name: Verify MariaDB running from host, create Database and show Database
  # #     run: |
  # #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  # #           echo "Waiting for database connection..."
  # #           sleep 2
  # #       done
  # #   - name: Check MariaDB version
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  # #   - name: Verify MariaDB database from user
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  # #   - name: Verify Database create or not
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  # #   - name: Database connection check
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  # #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  # #   - name: Destroy Container 
  # #     run: |
  # #       docker-compose down
  # #       echo "y" | docker system prune -a
  # #       while -d /tmp/app; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while -d /tmp/lamp; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  

  # Apache-PHP72-Mariadb:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, self-hosted]
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #   steps:
  #   - name: Slack Notification
  #     uses: act10ns/slack@v1
  #     with: 
  #       status: starting
  #       channel: '#github_action_status'
  #       SLACK_COLOR: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
  #       message: Waiting for LAMP 7.2 Build and Testing...
  #     if: always()
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image Apache php 7.2
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "7.2"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/lamp
  #         MARIADB_VERSION:  latest
  #   - name: PHP version check
  #     run : docker exec lamp-stack_apache_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lamp-stack_apache_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lamp-stack_apache_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       sudo curl -I --http2 http://localhost:5590/
  #   - name: Laravel6 test
  #     run:  docker exec lamp-stack_apache_1 sudo composer create-project --prefer-dist laravel/laravel:^6.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  #   - name: Destroy Container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker volume prune
  #       sudo rm -rf /tmp/app
  #       sudo rm -rf /tmp/lamp
  #   - name: Slack Notification
  #     uses: 8398a7/action-slack@v3
  #     with: 
  #       status: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow
  #       channel: '#github_action_status'
  #     if: always()
  # # Apache-PHP72-Mariadb-ARM64:
  # #   runs-on: self-hosted
  # #   steps:
  # #   - uses: actions/checkout@v2
  # #   - name: Check folder
  # #     run:  |
  # #       while -d /tmp/app; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while -d /tmp/lamp; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  # #   - name : Folder check list
  # #     run:  |
  # #       while [ -d /tmp/app ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while [ -d /tmp/db ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  # #   - name: Build the Docker image Apache php 7.2
  # #     run: docker-compose -f "docker-compose.yml" up -d --build
  # #     env:
  # #         PHP_VERSION: "7.2"
  # #         XDEBUG: true
  # #         DISPLAY_PHPERROR: true
  # #         SERVER_ROOT:  /var/www/
  # #         APP_CODE_PATH_HOST: /tmp/app
  # #         DB_NAME: test
  # #         DB_USER:  admin
  # #         DB_PASSWORD:  password
  # #         DB_ROOT_PASSWORD: password
  # #         DATA_PATH_HOST: /tmp/lamp
  # #         MARIADB_VERSION:  latest
  # #   - name: PHP version check
  # #     run : docker exec lamp-stack_apache_1 php -v
  # #   - name: Mongodb driver check
  # #     run:  docker exec lamp-stack_apache_1 php -m | grep mongo
  # #   - name: Mysql Driver check
  # #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  # #   - name: Composer test
  # #     run: docker exec lamp-stack_apache_1 composer
  # #   - name: Web site Test
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  # #       curl -i http://localhost:5590/
  # #   - name: Laravel6 test
  # #     run:  docker exec lamp-stack_apache_1 sudo composer create-project --prefer-dist laravel/laravel:^6.0
  # #   - name: Verify MariaDB running from host, create Database and show Database
  # #     run: |
  # #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  # #           echo "Waiting for database connection..."
  # #           sleep 2
  # #       done
  # #   - name: Check MariaDB version
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  # #   - name: Verify MariaDB database from user
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  # #   - name: Verify Database create or not
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  # #   - name: Database connection check
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  # #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  # #   - name: Destroy Container 
  # #     run: |
  # #       docker-compose down
  # #       echo "y" | docker system prune -a
  # #       while -d /tmp/app; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while -d /tmp/lamp; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  

  # Apache-PHP71-Mariadb:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, self-hosted]
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #   steps:
  #   - name: Slack Notification
  #     uses: act10ns/slack@v1
  #     with: 
  #       status: starting
  #       channel: '#github_action_status'
  #       SLACK_COLOR: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
  #       message: Waiting for LAMP 7.1 Build and Testing...
  #     if: always()
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image Apache php 7.1
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "7.1"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/lamp
  #         MARIADB_VERSION:  latest
  #   - name: PHP version check
  #     run : docker exec lamp-stack_apache_1 php -v
  #   - name: Mysql Driver check
  #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lamp-stack_apache_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       sudo curl -I --http2 http://localhost:5590/
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  #   - name: Destroy Container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker volume prune
  #       sudo rm -rf /tmp/app
  #       sudo rm -rf /tmp/lamp
  #   - name: Slack Notification
  #     uses: 8398a7/action-slack@v3
  #     with: 
  #       status: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow
  #       channel: '#github_action_status'
  #     if: always()
  # # Apache-PHP71-Mariadb-ARM64:
  # #   runs-on: self-hosted
  # #   steps:
  # #   - uses: actions/checkout@v2
  # #   - name: Check folder
  # #     run:  |
  # #       while -d /tmp/app; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while -d /tmp/lamp; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  # #   - name : Folder check list
  # #     run:  |
  # #       while [ -d /tmp/app ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while [ -d /tmp/db ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  # #   - name: Build the Docker image Apache php 7.1
  # #     run: docker-compose -f "docker-compose.yml" up -d --build
  # #     env:
  # #         PHP_VERSION: "7.1"
  # #         XDEBUG: true
  # #         DISPLAY_PHPERROR: true
  # #         SERVER_ROOT:  /var/www/
  # #         APP_CODE_PATH_HOST: /tmp/app
  # #         DB_NAME: test
  # #         DB_USER:  admin
  # #         DB_PASSWORD:  password
  # #         DB_ROOT_PASSWORD: password
  # #         DATA_PATH_HOST: /tmp/lamp
  # #         MARIADB_VERSION:  latest
  # #   - name: PHP version check
  # #     run : docker exec lamp-stack_apache_1 php -v
  # #   - name: Mysql Driver check
  # #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  # #   - name: Composer test
  # #     run: docker exec lamp-stack_apache_1 composer
  # #   - name: Web site Test
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  # #       curl -i http://localhost:5590/
  # #   - name: Verify MariaDB running from host, create Database and show Database
  # #     run: |
  # #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  # #           echo "Waiting for database connection..."
  # #           sleep 2
  # #       done
  # #   - name: Check MariaDB version
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  # #   - name: Verify MariaDB database from user
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  # #   - name: Verify Database create or not
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  # #   - name: Database connection check
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  # #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  # #   - name: Destroy Container 
  # #     run: |
  # #       docker-compose down
  # #       echo "y" | docker system prune -a
  # #       while -d /tmp/app; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while -d /tmp/lamp; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done

  
  # Apache-PHP5-Mariadb:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, self-hosted]
  #   runs-on: ${{ matrix.os }}
  #   env:
  #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #   steps:
  #   - name: Slack Notification
  #     uses: act10ns/slack@v1
  #     with: 
  #       status: starting
  #       channel: '#github_action_status'
  #       SLACK_COLOR: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
  #       message: Waiting for LAMP 5.6 Build and Testing...
  #     if: always()
  #   - uses: actions/checkout@v2
  #   - name : Folder check list
  #     run:  |
  #       while [ -d /tmp/app ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/app/
  #       done
  #       while [ -d /tmp/db ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/lamp
  #       done
  #   - name: Build the Docker image apache php 5.6
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "5.6"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/lamp
  #         MARIADB_VERSION:  latest
  #   - name: PHP version check
  #     run : docker exec lamp-stack_apache_1 php -v
  #   - name: Mysql Driver check
  #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lamp-stack_apache_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       sudo curl -I --http2 http://localhost:5590/
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  #   - name: Destroy Container and file
  #     run:  |
  #       docker-compose down
  #       sudo rm -rf /tmp/app
  #       sudo rm -rf /tmp/lamp
  #       echo "y" | docker image prune -a
  #       echo "y" | docker volume prune
  #   - name: Slack Notification
  #     uses: 8398a7/action-slack@v3
  #     with: 
  #       status: ${{ job.status }}
  #       fields: repo,message,commit,author,action,eventName,ref,workflow
  #       channel: '#github_action_status'
  #     if: always()
  # # Apache-PHP5-Mariadb-ARM64:
  # #   runs-on: self-hosted
  # #   steps:
  # #   - uses: actions/checkout@v2
  # #   - name: Check folder
  # #     run:  |
  # #       while -d /tmp/app; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while -d /tmp/lamp; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
  # #   - name: Build the Docker image Apache php 5.6
  # #     run: docker-compose -f "docker-compose.yml" up -d --build
  # #     env:
  # #         PHP_VERSION: "5.6"
  # #         XDEBUG: true
  # #         DISPLAY_PHPERROR: true
  # #         SERVER_ROOT:  /var/www/
  # #         APP_CODE_PATH_HOST: /tmp/app
  # #         DB_NAME: test
  # #         DB_USER:  admin
  # #         DB_PASSWORD:  password
  # #         DB_ROOT_PASSWORD: password
  # #         DATA_PATH_HOST: /tmp/lamp
  # #         MARIADB_VERSION:  latest
  # #   - name: PHP version check
  # #     run : docker exec lamp-stack_apache_1 php -v
  # #   - name: Mysql Driver check
  # #     run: docker exec lamp-stack_apache_1 php -m | grep mysqli
  # #   - name: Composer test
  # #     run: docker exec lamp-stack_apache_1 composer
  # #   - name: Web site Test
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  # #       curl -i http://localhost:5590/
  # #   - name: Verify MariaDB running from host, create Database and show Database
  # #     run: |
  # #       while ! docker exec lamp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  # #           echo "Waiting for database connection..."
  # #           sleep 2
  # #       done
  # #   - name: Check MariaDB version
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  # #   - name: Verify MariaDB database from user
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  # #   - name: Verify Database create or not
  # #     run:  docker exec lamp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  # #   - name: Database connection check
  # #     run: |
  # #       docker exec lamp-stack_apache_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  # #       docker exec lamp-stack_apache_1 sudo php /var/www/db.php
  # #   - name: Destroy Container 
  # #     run: |
  # #       docker-compose down
  # #       echo "y" | docker system prune -a
  # #       while [ -d /tmp/app ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/app/
  # #       done
  # #       while [ -d /tmp/lamp ]; do
  # #       echo "password" | sudo -S whoami
  # #       sudo rm -rf /tmp/lamp
  # #       done
        
  
